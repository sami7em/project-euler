// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

public class Problem2 {
  public static void main(String args[]) {
    int n = 4000000;
    int i = 1;
    int sum = 0;
    
    while(fibonacci(i) < n) {
      if(fibonacci(i) % 2 == 0) {
        sum += fibonacci(i);
      }
      i++;
    }
    System.out.println("Sum: " + sum);
  }
  
  public static int fibonacci(int n) {
    int n1 = 1, n2 = 2, sum = 0;
    if(n == 1) {
      return 1;
    } else if(n == 2) {
      return 2;
    } else {
      for(int i = 3; i <= n; i++) {
        sum = n1 + n2;
        n1 = n2;
        n2 = sum;
      }
    }
    return sum;
  }
}
